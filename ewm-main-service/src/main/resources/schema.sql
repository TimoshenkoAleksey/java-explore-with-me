CREATE TABLE IF NOT EXISTs users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL,
    name VARCHAR(250) NOT NULL,
    CONSTRAINT check_user_email_length CHECK (LENGTH(email) >= 6 AND LENGTH(email) <= 254),
    CONSTRAINT check_user_name_length CHECK (LENGTH(name) >= 2 AND LENGTH(name) <= 250)
);

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT uq_cat_name UNIQUE (name),
    CONSTRAINT check_cat_name_length CHECK (LENGTH(name) >= 1 AND LENGTH(name) <= 50)
);

CREATE TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT,
    lon FLOAT
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2000) NOT NULL,
    category_id BIGINT REFERENCES categories (id) NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    initiator_id BIGINT REFERENCES users (id) NOT NULL,
    location_id BIGINT REFERENCES locations (id) NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit INTEGER NOT NULL,
    published_on TIMESTAMP,
    request_moderation BOOLEAN NOT NULL,
    status VARCHAR(256) NOT NULL,
    title VARCHAR (120) NOT NULL,
    CONSTRAINT check_event_annotation_length CHECK (LENGTH(annotation) >= 20 AND LENGTH(annotation) <= 2000),
    CONSTRAINT check_event_description_length CHECK (LENGTH(description) >= 20 AND LENGTH(description) <= 7000),
    CONSTRAINT check_event_title_length CHECK (LENGTH(title) >= 3 AND LENGTH(title) <= 120)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    event_id BIGINT REFERENCES events(id) NOT NULL,
    requester_id BIGINT REFERENCES users(id) NOT NULL,
    status VARCHAR(256) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE,
    event_id BIGINT REFERENCES events (id) ON DELETE CASCADE,
    PRIMARY KEY (compilation_id, event_id)
);